Question: Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai). 
          n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). 
          Find two lines, which together with x-axis forms a container, such that the container contains the most water.
    Note: You may not slant the container.

Time complexity: O(n). Space complexity: O(1).
public class Solution {
    public int maxArea(int[] height) {
        if (height == null || height.length < 2) {
            return 0;
        }
        int maxWater = 0;
        int left = 0;
        int right = height.length - 1;
        while (left < right) {
            int maxLeft = height[left];
            int maxRight = height[right];
            maxWater = Math.max(maxWater, Math.min(maxLeft, maxRight) * (right - left));
            if (maxLeft < maxRight) {
                while (left < right && height[left] <= maxLeft) {
                    left++;
                }
            } else {
                while (left < right && height[right] <= maxRight) {
                    right--;
                }
            }
        }
        return maxWater;
    }
}
