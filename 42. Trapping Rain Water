Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is
able to trap after raining.
For example, 
Given [0,1,0,2,1,0,1,3,2,1,2,1], return 6.

public class Solution {
    public int trap(int[] height) {
        if (height == null || height.length < 3) {
            return 0;
        }
        int left = 0;
        int right = height.length - 1;
        int smaller = 0;                // Note: mark the smaller one of the left and right pointer.
        int rst = 0;
        while (left < right) {
            if (height[left] < height[right]) {
                smaller = height[left];
                while (left < right && smaller >= height[left]) {     // compare with the smaller every time.
                    rst += smaller - height[left];
                    left++;
                }
            } else {
                smaller = height[right];
                while (left < right && smaller >= height[right]) {
                    rst += smaller - height[right];
                    right--;
                }
            }
        }
        return rst;
    }
}
