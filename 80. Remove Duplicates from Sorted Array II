Follow up for "Remove Duplicates": What if duplicates are allowed at most twice?
For example, Given sorted array nums = [1,1,1,2,2,3], Your function should return length = 5, with the first five elements
of nums being 1, 1, 2, 2 and 3. It doesn't matter what you leave beyond the new length.

Time complexity: O(n). Space complexity: O(1).
public class Solution {
    public int removeDuplicates(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }
        int len = 1;
        int count = 1;
        for (int i = 1; i < nums.length; i++) {
            if (nums[i] > nums[i - 1]) {
                nums[len++] = nums[i];
                count = 1;
            } else if (count == 1) {
                nums[len++] = nums[i];
                count++;
            } 
        }
        return len;
    }
}
