Question: Given a string word and an abbreviation abbr, return whether the string matches the given abbreviation.
A string such as "word" contains only the following valid abbreviations:
["word", "1ord", "w1rd", "wo1d", "wor1", "2rd", "w2d", "wo2", "1o1d", "1or1", "w1r1", "1o2", "2r1", "3d", "w3", "4"]
Notice that only the above abbreviations are valid abbreviations of the string "word". Any other string is not a valid abbreviation
of "word".
Note:
Assume s contains only lowercase letters and abbr contains only lowercase letters and digits.

Example 1:
Given s = "internationalization", abbr = "i12iz4n":  Return true.
Example 2:
Given s = "apple", abbr = "a2e":  Return false.

Time complexity: O(m + n)
Space complexity: O(1)

public class Solution {
    public boolean validWordAbbreviation(String word, String abbr) {
        int m = word.length();
        int n = abbr.length();
        if (m < n) {
            return false;
        }
        int i = 0;
        int j = 0;
        while (i < m && j < n) {
            if (word.charAt(i) == abbr.charAt(j)) {
                i++;
                j++;
            } else if (Character.isDigit(abbr.charAt(j))) {
                if (abbr.charAt(j) == '0') {                      // the first number cannot be 0.
                    return false;
                }
                int num = 0;
                while (j < n && Character.isDigit(abbr.charAt(j))) {
                    num = num * 10 + (abbr.charAt(j) - '0');
                    j++;
                }
                i += num;
            } else {
                return false;
            }
        }
        return i == m && j == n;
    }
}
