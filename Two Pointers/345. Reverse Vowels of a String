Question: Given a string s, reverse only the vowels in the string and return it.
The vowels are 'a', 'e', 'i', 'o', and 'u', and they can appear in both lower and upper cases, more than once.

Example 1: Given s = "hello", return "holle".
Example 2: Given s = "leetcode", return "leotcede".

Approach 1: Two pointers
Time complexity: O(n)
Space complexity: O(n), convert the string to a char array.

public class Solution {
    public String reverseVowels(String s) {
        if (s == null || s.length() < 2) {
            return s;
        }
        // Convert String to char array as String is immutable in Java
        char[] arr = s.toCharArray();
        String vowels = "AOEIUaoeiu";
        int left = 0;
        int right = s.length() - 1;
        while (left < right) {
            while (left < right && !vowels.contains(String.valueOf(arr[left]))) {
                left++;
            }
            while (left < right && !vowels.contains(String.valueOf(arr[right]))) {
                right--;
            }
            if (left < right) {
                char tmp = arr[left];
                arr[left++] = arr[right];
                arr[right--] = tmp;
            }
        }
        // Converting char array back to String
        return new String(arr);
    }
}
