Given a non-negative number represented as an array of digits, plus one to the number. The digits are stored such that the
most significant digit is at the head of the list.

Time complexity: O(n). 
Space complexity: O(n) in worst case, O(1) in most time.
public class Solution {
    public int[] plusOne(int[] digits) {
        if (digits == null) {
            return new int[]{1};
        }
        int carry = 1;
        for (int i = digits.length - 1; i >= 0; i--) {
            int sum = digits[i] + carry;
            digits[i] = sum % 10;
            carry = sum / 10;
            if (carry == 0) {
                return digits;
            }
        }
        int[] rst = new int[digits.length + 1];
        rst[0] = carry;
        return rst;
    }
}
