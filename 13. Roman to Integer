Question: Given a roman numeral, convert it to an integer. Input is guaranteed to be within the range from 1 to 3999.

Time complexity: O(n). 
Space complexity: O(1).
public class Solution {
    public int romanToInt(String s) {
        if (s == null || s.length() == 0) {
            return 0;
        }
        int rst = 0;
        Map<Character, Integer> map = new HashMap<Character, Integer>();
        map.put('I', 1);
        map.put('V', 5);
        map.put('X', 10);
        map.put('L', 50);
        map.put('C', 100);
        map.put('D', 500);
        map.put('M', 1000);
        for (int i = s.length() - 1; i >= 0; i--) {
            if (i == s.length() - 1 || map.get(s.charAt(i)) >= map.get(s.charAt(i + 1))) {    // Note: ==
                rst += map.get(s.charAt(i));
            } else {
                rst -= map.get(s.charAt(i));
            }
        }
        return rst;
    }
}
