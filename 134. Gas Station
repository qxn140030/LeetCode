There are N gas stations along a circular route, where the amount of gas at station i is gas[i].
You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to its next station (i+1).
You begin the journey with an empty tank at one of the gas stations.
Return the starting gas station's index if you can travel around the circuit once, otherwise return -1.
Note: The solution is guaranteed to be unique.

Time complexity: O(n). Space complexity: O(1).
public class Solution {
    public int canCompleteCircuit(int[] gas, int[] cost) {
        if (gas == null || gas.length == 0 || cost == null || cost.length == 0) {
            return -1;
        }
        int local = 0;
        int global = 0;
        int index = -1;
        for (int i = 0; i < gas.length; i++) {
            global += gas[i] - cost[i];
            local += gas[i] - cost[i];
            if (local < 0) {
                local = 0;
                index = i;
            }
        }
        return global >= 0 ? index + 1 : -1;
    }
}
