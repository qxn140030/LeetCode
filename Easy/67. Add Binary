Question: Given two binary strings, return their sum (also a binary string).
For example, a = "11", b = "1", Return "100".

Time complexity: O(max(m, n)). m, n are the length of two strings. 
Space complexity: O(max(m, n)), length of result.

public class Solution {
    public String addBinary(String a, String b) {
        if (a == null || a.length() == 0) {
            return b;
        }
        if (b == null || b.length() == 0) {
            return a;
        }
        int carries = 0;
        int i = a.length() - 1;
        int j = b.length() - 1;
        StringBuilder sb = new StringBuilder();
        while (i >= 0 || j >= 0) {
            int na = i >= 0 ? a.charAt(i) - '0' : 0;
            int nb = j >= 0 ? b.charAt(j) - '0' : 0;
            int sum = na + nb + carries;
            carries = sum / 2;
            sb.append(sum % 2);
            i--;
            j--;
        }
        if (carries > 0) {
            sb.append(carries);
        }
        return sb.reverse().toString();
    }
}
