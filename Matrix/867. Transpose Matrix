Given a 2D integer array matrix, return the transpose of matrix.
The transpose of a matrix is the matrix flipped over its main diagonal, switching the matrix's row and column indices.
{                               {
  {2, 4, -1},                     {2, -10, 18},
  {-10, 5, 11},       ->          {4, 5, -7},
  {18, -7, 6}                     {-1, 11, 6}
}                               }

Example 1:
Input: matrix = [[1,2,3],
                 [4,5,6],
                 [7,8,9]]
Output: [[1,4,7],
         [2,5,8],
         [3,6,9]]

Example 2:
Input: matrix = [[1,2,3],
                 [4,5,6]]
Output: [[1,4],
         [2,5],
         [3,6]]

Approach 1: Copy Directly
Time Complexity: O(m * n)
Space Complexity: O(1)

class Solution {
    public int[][] transpose(int[][] matrix) {
        int m = matrix.length, n = matrix[0].length;
        int[][] rst = new int[n][m];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                rst[j][i] = matrix[i][j];
            }
        }
        return rst;
    }
}
