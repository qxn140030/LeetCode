Given numRows, generate the first numRows of Pascal's triangle.
For example, given numRows = 5,
Return
[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]

Time complexity: O(n^2). Space complexity: O(1).
public class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> rst = new ArrayList<List<Integer>>();
        if (numRows <= 0) {
            return rst;
        }
        for (int i = 0; i < numRows; i++) {
            List<Integer> row = new ArrayList<Integer>();
            row.add(1);
            for (int j = 1; j < i; j++) {
                row.add(rst.get(i - 1).get(j - 1) + rst.get(i - 1).get(j));
            }
            if (i != 0) {
                row.add(1);
            }
            rst.add(row);
        }
        return rst;
    }
}
