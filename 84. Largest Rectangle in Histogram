Given n non-negative integers representing the histogram's bar height where the width of each bar is 1, find the area of largest
rectangle in the histogram.
For example,
Given heights = [2,1,5,6,2,3], return 10.

Solution 1: for every index as a right bound, try all the left ones to get the max. 
Time complexity: O(n^2). Space complexity: O(1).
public class Solution {
    public int largestRectangleArea(int[] heights) {
        if (heights == null || heights.length == 0) {
            return 0;
        }
        int rst = 0;
        for (int i = 0; i < heights.length; i++) {
            if (i < heights.length - 1 && heights[i] <= heights[i + 1]) {       // pruning. beacuse if heights[i] <= heights[i + 1],
                continue;                          // whatever the left bound is, heights[i + 1] will always give you a larger area.
            }
            int minH = heights[i];
            for (int j = i; j >= 0; j--) {
                int w = i - j + 1;
                minH = Math.min(minH, heights[j]);
                rst = Math.max(rst, w * minH);
            }
        }
        return rst;
    }
}
