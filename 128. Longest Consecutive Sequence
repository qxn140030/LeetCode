Given an unsorted array of integers, find the length of the longest consecutive elements sequence.
For example, Given [100, 4, 200, 1, 3, 2],
The longest consecutive elements sequence is [1, 2, 3, 4]. Return its length: 4.
Your algorithm should run in O(n) complexity.

Using HashSet, given a number, find up and down, if exist, remove from HashSet.
Time complexity: O(n). Space complexity: O(n).
public class Solution {
    public int longestConsecutive(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }
        Set<Integer> hs = new HashSet<>();
        for (int num : nums) {
            hs.add(num);
        }
        int rst = 0;
        for (int i = 0; i < nums.length; i++) {
            int down = nums[i] - 1;
            while (hs.contains(down)) {
                hs.remove(down--);                 // Note: remember to remove!
            }
            int up = nums[i] + 1;
            while (hs.contains(up)) {
                hs.remove(up++);
            }
            rst = Math.max(rst, up - down - 1);
        }
        return rst;
    }
}
