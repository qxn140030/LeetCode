Question: Say you have an array for which the ith element is the price of a given stock on day i. If you were only permitted to
          complete at most one transaction (ie, buy one and sell one share of the stock), design an algorithm to find the maximum profit.

Time complexity: O(n). Space complexity: O(1).
public class Solution {
    public int maxProfit(int[] prices) {
        if (prices == null || prices.length < 2) {
            return 0;
        }
        int profit = 0;
        int lowest = prices[0];
        for (int i = 1; i < prices.length; i++) {
            if (prices[i] > lowest) {
                profit = Math.max(profit, prices[i] - lowest);
            } else {
                lowest = prices[i];
            }
        }
        return profit;
    }
}
