Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word in
the string.
If the last word does not exist, return 0.
Note: A word is defined as a character sequence consists of non-space characters only.
For example, Given s = "Hello World", return 5.

Solution 1: Time complexity: O(n). Space complexity: O(1).
public class Solution {
    public int lengthOfLastWord(String s) {
        if (s == null) {
            return 0;
        }
        s = s.trim();
        int len = 0;
        for (int i = s.length() - 1; i >= 0; i--) {
            if (s.charAt(i) == ' ') {
                break;
            } 
	          len++;
        }
        return len;
    }
}

Solution 2: split by white space, get the length of the last elment in array.
Time complexity: O(n). Space complexity: O(n).
public class Solution {
    public int lengthOfLastWord(String s) {
        String[] arr = s.split(" ");          // String[] arr = s.split("\\s+");
        if (arr == null || arr.length == 0) {
            return 0;
        }
        return arr[arr.length - 1].length();
    }
}
