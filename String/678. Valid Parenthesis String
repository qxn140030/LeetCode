Given a string s containing only three types of characters: '(', ')' and '*', return true if s is valid.

The following rules define a valid string:

Any left parenthesis '(' must have a corresponding right parenthesis ')'.
Any right parenthesis ')' must have a corresponding left parenthesis '('.
Left parenthesis '(' must go before the corresponding right parenthesis ')'.
'*' could be treated as a single right parenthesis ')' or a single left parenthesis '(' or an empty string "".
 
Example 1:
Input: s = "()"
Output: true

Example 2:
Input: s = "(*)"
Output: true

Example 3:
Input: s = "(*))"
Output: true

public boolean checkValidString(String s) {
    int open = 0, close = 0, n = s.length() - 1;
    for (int i = 0; i <= n; i++) {
        if (s.charAt(i) == '(' || s.charAt(i) == '*') {
            open++;
        } else {
            open--;
        }  
        if (s.charAt(n - i) == ')' || s.charAt(n - i) == '*') {
            close++;
        } else {
            close--;
        }
        if (open < 0 || close < 0) {
            return false;
        }
    }
    return true;
}
