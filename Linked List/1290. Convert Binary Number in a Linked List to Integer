Question: Given head which is a reference node to a singly-linked list. The value of each node in the linked list is either 0 or 1.
The linked list holds the binary representation of a number.
Return the decimal value of the number in the linked list.
The most significant bit is at the head of the linked list.

Example 1:
Input: head = [1,0,1]
Output: 5

Example 2:
Input: head = [0]
Output: 0

Approach 1: Binary Representation
Time complexity: O(n)
Space complexity: O(1)

class Solution {
    public int getDecimalValue(ListNode head) {
        int num = head.val;
        while (head.next != null) {
            num = num * 2 + head.next.val;      //
            head = head.next;    
        }
        return num;
    }
}

Approach 2: Bit Manipulation
Time complexity: O(n)
Space complexity: O(1)

class Solution {
    public int getDecimalValue(ListNode head) {
        int num = head.val;
        while (head.next != null) {
            num = (num << 1) | head.next.val;      // 
            head = head.next;    
        }
        return num;
    }
}
