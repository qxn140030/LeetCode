Given the coordinates of two rectilinear rectangles in a 2D plane, return the total area covered by the two rectangles.
The first rectangle is defined by its bottom-left corner (ax1, ay1) and its top-right corner (ax2, ay2).
The second rectangle is defined by its bottom-left corner (bx1, by1) and its top-right corner (bx2, by2).

Approach 1: Math and Geometry
Time complexity: O(1)
Space complexity: O(1)

class Solution {
    public int computeArea(int ax1, int ay1, int ax2, int ay2, int bx1, int by1, int bx2, int by2) {
        int total = (ay2 - ay1) * (ax2 - ax1) + (by2 - by1) * (bx2 - bx1);
        if (ay2 <= by1 || ax2 <= bx1 || ax1 >= bx2 || ay1 >= by2) {
            return total;
        }
        int right = Math.min(ax2, bx2);
        int left = Math.max(ax1, bx1);
        int top = Math.min(ay2, by2);
        int bottom = Math.max(ay1, by1);
        return total - (right - left) * (top - bottom);
    }
}
