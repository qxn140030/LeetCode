Ugly numbers are positive numbers whose prime factors only include 2, 3, 5. 

Example 1:
Input: n = 6
Output: true, 6 = 2 Ã— 3

Example 2:
Input: n = 1
Output: true, 1 has no prime factors, therefore all of its prime factors are limited to 2, 3, and 5.

Example 3:
Input: n = 14
Output: false, 14 is not ugly since it includes the prime factor 7.

Approach 1: Definition
Time complexity: O(logn), where n is the magnitude of the input integer.
Space complexity: O(1)

public class Solution {
    public boolean isUgly(int num) {
        if (num <= 0) {
            return false;
        }
        while (num % 2 == 0) {
            num /= 2;
        }
        while (num % 3 == 0) {
            num /= 3;
        }
        while (num % 5 == 0) {
            num /= 5;
        }
        return num == 1;
    }
}

class Solution {
    public boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        for (int factor : new int[] { 2, 3, 5 }) {
            n = helper(n, factor);
        }
        return n == 1;
    }
    private int helper(int dividend, int divisor) {
        while (dividend % divisor == 0) {
            dividend /= divisor;
        }
        return dividend;
    }
}
