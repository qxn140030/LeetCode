Given an array of integers, every element appears three times except for one. Find that single one.
Note: Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?

Time complexity: O(n). Space complexity: O(1).
public class Solution {
    public int singleNumber(int[] nums) {
        if (nums == null || nums.length == 0) {
            return -1;
        }
        int rst = 0;
        for (int j = 0; j < 32; j++) {
            int tmp = 0;
            for (int i = 0; i < nums.length; i++) {
                tmp += (nums[i] >> j) & 1;
            }
            rst |= (tmp % 3) << j;
        }
        return rst;
    }
}
