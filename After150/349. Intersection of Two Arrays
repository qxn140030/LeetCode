Given two arrays, write a function to compute their intersection.
Example: Given nums1 = [1, 2, 2, 1], nums2 = [2, 2], return [2].
Note:
Each element in the result must be unique.
The result can be in any order.

public class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        Arrays.sort(nums1);
        Arrays.sort(nums2);
        List<Integer> tmp = new ArrayList<>();
        int i = 0;
        int j = 0;
        int index = 0;
        while (i < nums1.length && j < nums2.length) {
            if (nums1[i] == nums2[j]) {
                if (index == 0 || tmp.get(index - 1) != nums1[i]) {
                    tmp.add(nums1[i]);
                    index++;
                } 
                i++;
                j++;
            } else if (nums1[i] > nums2[j]) {
                j++;  
            } else {
                i++;
            }
        }
        int[] rst = new int[index];
        for (int k = 0; k < tmp.size(); k++) {
            rst[k] = tmp.get(k);
        }
        return rst;
    }
}

public class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        Set<Integer> hs = new HashSet<>();
        for (int i : nums1) {
            hs.add(i);
        }
        List<Integer> tmp = new ArrayList<>();
        for (int i : nums2) {
            if (hs.contains(i)) {
                tmp.add(i);
                hs.remove(i);
            }
        }
        int[] rst = new int[tmp.size()];
        for (int i = 0; i < rst.length; i++) {
            rst[i] = tmp.get(i);
        }
        return rst;
    }
}
