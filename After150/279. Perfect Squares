Given a positive integer n, find the least number of perfect square numbers (for example, 1, 4, 9, 16, ...) which sum to n.
For example, given n = 12, return 3 because 12 = 4 + 4 + 4; given n = 13, return 2 because 13 = 4 + 9.

Time complexity: O(n^2). Space complexity: O(n).
public class Solution {
    public int numSquares(int n) {
        int[] dp = new int[n + 1];
        Arrays.fill(dp, Integer.MAX_VALUE);
        for (int i = 1; i * i <= n; i++) {
            dp[i * i] = 1;
            for (int j = 1; j + i * i <= n; j++) {
                dp[j + i * i] = Math.min(dp[j + i * i], dp[j] + 1);
            }
        }
        return dp[n];
    }
}
