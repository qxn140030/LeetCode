The API: int read4(char *buf) reads 4 characters at a time from a file.
The return value is the actual number of characters read. For example, it returns 3 if there is only 3 characters left in the file.
By using the read4 API, implement the function int read(char *buf, int n) that reads n characters from the file.
Note:
The read function will only be called once for each test case.

/* The read4 API is defined in the parent class Reader4.
      int read4(char[] buf); */
public class Solution extends Reader4 {
    /**
     * @param buf Destination buffer
     * @param n   Maximum number of characters to read
     * @return    The number of characters read
     */
    public int read(char[] buf, int n) {
        char[] tmp = new char[4];
        int index = 0;
        while (index < n) {
            int cur = read4(tmp);
            if (cur == 0) {
                break;
            }
            cur = Math.min(cur, n - index);
            for (int i = 0; i < cur; i++) {
                buf[index++] = tmp[i];
            }
        }
        return index;
    }
}

public class Solution extends Reader4 {
    Queue<Character> q = new LinkedList<>();
    boolean endOfFile = false;
    /**
     * @param buf Destination buffer
     * @param n   Maximum number of characters to read
     * @return    The number of characters read
     */
    public int read(char[] buf, int n) {
        int index = 0;  
        char[] temp = new char[4]; 
        while (q.size() < n && !endOfFile) {  
            int cur = read4(temp);  
            if (cur < 4)  
                endOfFile = true;  
            for (int i = 0; i < cur; i++)  
                q.add(temp[i]);  
        }  
        int l = Math.min(q.size(), n);  
        for (int i = 0 ; i < l; i++) {  
            buf[index++] = q.poll();  
        }  
        return index; 
    }
}
