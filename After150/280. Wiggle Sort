Given an unsorted array nums, reorder it in-place such that nums[0] <= nums[1] >= nums[2] <= nums[3]....
For example, given nums = [3, 5, 2, 1, 6, 4], one possible answer is [1, 6, 2, 5, 3, 4].

Solution 1: sort and switch.
public class Solution {
    public void wiggleSort(int[] nums) {
        Arrays.sort(nums);
        int start = 2;
        while (start < nums.length) {
            int tmp = nums[start];
            nums[start] = nums[start - 1];
            nums[start - 1] = tmp;
            start += 2;
        }
    }
}

Solution 2: switch nums[i] and nums[i - 1].
public class Solution {
    public void wiggleSort(int[] nums) {
        for (int i = 1; i < nums.length; i++) {
            if ((i % 2 == 1 && nums[i] < nums[i - 1]) || (i % 2 == 0 && nums[i] > nums[i - 1])) {
                int tmp = nums[i];
                nums[i] = nums[i - 1];
                nums[i - 1] = tmp;
            }
        }
    }
}
